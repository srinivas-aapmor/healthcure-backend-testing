name: Build and deploy Node.js app to Azure Web App - healthcure-backend

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Deploy to Azure Web App and capture logs
        id: deploy
        run: |
          {
            echo "=== Azure Deployment Logs ==="
            npx azure-webapps-deploy \
              --app-name "healthcure-backend" \
              --slot-name "Production" \
              --publish-profile "${{ secrets.AZURE_PUBLISH_PROFILE }}" \
              --package .
          } 2>&1 | tee deploy.log

      - name: Set Azure App Service app settings (env vars)
        uses: azure/appservice-settings@v1
        with:
          app-name: 'healthcure-backend'
          app-settings-json: |
            [
              { "name": "JWT_SECRET", "value": "${{ secrets.JWT_SECRET }}" },
              { "name": "MONGO_URI",  "value": "${{ secrets.MONGO_URI }}" },
              { "name": "PORT",       "value": "${{ secrets.PORT }}" }
            ]

      - name: Send Teams notification with logs
        if: always()
        run: |
          LOGS=$(cat deploy.log | tail -n 20 | sed 's/"/\\"/g' | sed "s/'/\\'/g")
          STATUS=" Deployment succeeded"
          if [ "${{ job.status }}" != "success" ]; then
            STATUS="Deployment failed"
          fi
          curl -H 'Content-Type: application/json' \
               -d "{
                    \"text\": \"${STATUS} to Azure Web App *healthcure-backend* by Srinivas Reddy\n\nLast 20 log lines:\n${LOGS}\"
                   }" \
               ${{ secrets.INCOMING_WEBHOOK }}

